FORMAT: 1A
HOST: https://api.surfly.com/v2/


# The Cobrowsing API

##### Definition of terms

Throughout the API we refer to several terms specific to Surfly.  For clarification,
these are defined below:

Client
 - A company that is a customer of Surfly

Agent
 - An employee of the client company, who is available to help when the 'Start Session'
  button is pressed

User
 - A generic term for either the agent, leader or follower.  Simply put,  a user is someone who
 interacts with the Surfly application.

Leader
 - A leader initiates the session, and invites followers to join them.  They are normally in control of the session, but
  can pass this control over to the follower.

Follower
 - Is invited to join the session by the leader.

UI
 - User Interface


----

# The Co-Browsing API

Whilst Surfly can be used directly from the Surfly website, we also have an
extensive API.  This enables our clients to integrate Surfly tightly
into their current website or web application. You can even completely automate
the management of client and agent creation through our REST API.

The following types of customizations of Surfly can be achieved:

 - [Website Integration](#website_integration)
 - [Session Customization](#session_customization)
 - [Customize session start or join page](#custom_session_start)
 - [Full Session Continuation](#full_session_continuation)
 - [Agent Creation](#automatic_agent_creation)
 - [Reseller Automatization](#reseller_automatization)

For example code please see the [Reference Code](#reference_code) section below.

<a name="website_integration"></a>
##### Website Integration

Add Surfly to your website and allow the visitors to your website to create a
support request by clicking on our support button.  The style and color of this
button can be fully customized to match your applications or website’s look and
feel.

<a name="session_customization"></a>
##### Session Customization

Enable or disable the videochat, allow users to navigate to different websites
or not, use a textchat mode or a pure docked mode or, for our Enterprise
customers, completely remove all Surfly UI and fully customize the look and feel
of the session.

<a name="custom_session_start"></a>
##### Custom session start or join page

Start a session from your own website, or maybe even create a specific invite
page or landing page for your clients.

<a name="full_session_continuation"></a>
##### Full Session Continuation

When your users are already logged in on your website, you probably don’t want
a Surfly session breaking the flow and/or require them to login
again. Surfly can pick up the session exactly where the user is.

<a name="automatic_agent_creation"></a>
##### Automatic Agent Creation

Agents can be added through the admin interface, but, if your agents are more
dynamic, these can also be added and removed through our REST API.

<a name="reseller_automatization"></a>
##### Reseller Automatization

Resellers can use our API to create new Surfly clients.  You decide whether you
want to invoice them directly or if we should handle this for you.


#### Adding customization

These types of customizations or integrations can be built in 3 different
ways, in order to manage the interface with Surfly:

 - The Surfly Code Snippet
 - The <a href='http://docs.surfly.com/javascript_api.html'>Javascript API</a>
 - The REST API

A variety of options are available for customizing Surfly. These can
be configured in the Javascript snippet, as an option in a REST call, or by simply
switching a flag in the Chrome extension.

Please refer to our <a href='http://docs.surfly.com/widget_options.html'>documentation</a> to see an extensive list of session options.


----

# REST API

By using the REST API, you can integrate our websharing technology into your own application or build a thin layer around our technology. You can completely customise Surfly and automate the management of client and agent creation through the REST API.

The Surfly REST API allows you to integrate the functionality of our dashboard in a programatical manner. With our API you can do the following things:

 * Clients - Create new clients *(reseller only)*
 * Agents - Manage your agents
 * Sessions - Get an overview of all your sessions
 * Queue - Manipulate the incoming Queue for your agents

To access our API, you will need to authenticate by using basic HTTP authentication.  In addition, some API calls require extra information such as:

 * RESELLER_KEY  *(reseller only)*
 * CLIENT_KEY

Both keys can be found on your API page in your dashboard. We recommend that you keep your CLIENT_KEY and RESELLER_KEY secret at all times.

Below you can find detailed code examples illustrating how to make the REST calls. You will need your REST API key (which can be found in the integration panel, just below the widget code).


<a name="reference_code"></a>

########################################
# Group Agents


# Agents Collection [/agents/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List all agents [GET]

List all AGENTS

**Response Body:**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| agent_id | ID of the agent | 1 |
| agent_name | name of the agent | Peter Pan |
| agent_email | email address of the agent | peter@neverland.net |



+ Response 200 (application/json)

        [
            {
                "agent_id": 1,
                "agent_name": "Peter Pan",
                "agent_email": "peter@neverland.net"
            }
        ]

### Create a new agent [POST]

Create a new AGENT

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| username | username of the agent | Peter Pan |
| agent_email | email address of the agent | peter@neverland.net |
| password | password | Pass@123 |


**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| agent_id | ID of the agent | 1 |




+ Request (application/json)

        {
            "username": "Peter Pan",
            "agent_email": "peter@neverland.net",
            "password":"Pass@123"
        }

+ Response 200 (application/json)

        {
            "agent_id": "1"
        }



# Agent information [/agents/{AGENT_ID}/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)
    + AGENT_ID (string, `2`)

### Get Agent Information [GET]

Get information about a certain AGENT by `AGENT_ID`

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| agent_id | ID of the agent | 2 |
| agent_name | name of the agent | John Doe |
| agent_email | email address of the agent | john.doe@example.com |


+ Response 200 (application/json)

        {
            "agent_id": 2,
            "agent_name": "John Doe",
            "agent_email": "john.doe@example.com"
        }


### Update an agent [PUT]

Update an AGENT by `AGENT_ID`

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| username (optional) | username of the agent | Peter Pan |
| agent_email (optional) | email address of the agent | peter@neverland.net |


**Response Body:**

| Name | Description | Example |
| ---------------| ------------| --------|
| agent_name | name of the agent | Peter |
| agent_id | ID of the agent | 2 |
| agent_email | email address of the agent | peter@neverland.net |

+ Request (application/json)

        {
            "username": "Peter",
            "agent_email": "peter@neverland.com"
        }

+ Response 200 (application/json)

        {
            "agent_name": "Peter",
            "agent_id": 2,
            "agent_email": "peter@neverland.com"
        }

### Delete an agent [DELETE]

Remove an AGENT by `AGENT_ID`


+ Response 200 (application/json)

        {
            "response": "Agent has been removed successfully"
        }



########################################
# Group Sessions


# Sessions Collection [/sessions/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List all Sessions [GET]

List all sessions


**Response Body:**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| session_id | unique ID of the session | fOBg4dXAPTHSoil6LywgfYA |
| formatted_id | unique formatted ID of the session | 123-456-789 |
| agent_id | ID of the agent | 2 |
| viewer_link | the link that must be opened in a ***viewer*** browser | https://surfly.com/123-456-789 |
| start_time | time the session started | 2016-06-17T14:30:44.026111Z |
| duration | length of the session (in seconds) | 123 |
| end_time | time the session finished | 2016-06-17T15:30:44.026111Z |
| pin | 4-digit PIN code that can be used to join the session | 3927 |
| queued | Whether the session has been put in a waiting queue | false |
| start_url | page the session started from | https://example.com/ |
| meta | additional data attached to joining user | {} |
| tags | array of attached session tags | ["tag1", "tag2"] |
| ip_leader | IP address of the leader | "123.123.123.123" |
| ip_follower | comma seperated list of IP's of followers | "10.0.0.1,10.0.0.2" |
| emails_send | list of email invitations sent | [{"to": [], "from": null}] |
| options | options the session was created with | {"ui_off": false, "block_until_agent_joins": true} |


+ Response 200 (application/json)

        [{
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": null,
            "viewer_link": "https://surfly.com/123-123-123",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://surfly.com.com/test/widget/?widget_key=3b57bd2db21c46d2875508b982968d26&autohide_button=false&hide_until_agent_joins=false",
            "meta": "{}",
            "tags": [],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }]

### Create a session [POST]

Create a new session

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| url | url to co-browse | http://www.google.com |
| agent_id (optional) | ID of the agent | 2 |
| tags (optional) | session tags | tag1, tag2


**Response Body:**

Response will contain a JSON object with the same fields as in list endpoint, and the following extra fields:

|  Name | Description | Example |
| ---------------| ------------| --------|
| leader_link |  the link that must be opened in a ***leader*** (controlling) browser. It has a 2 minute time out attached to it, if not used within that time, the session will be closed. | https://surfly.com/mUBRJyslQStVXPEwUwFyQ |

+ Request (application/json)

        {
            "url": "http://www.surfly.com/",
            "tags": ["tag1", "tag2"]
        }

+ Response 200 (application/json)

        {
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": null,
            "viewer_link": "https://surfly.com/123-123-123",
            "leader_link": "https://surfly.com/mUBRJyslQStVXPEwUwFyQ",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://example.com",
            "meta": "{}",
            "tags": [],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }




# Active Sessions Collection [/sessions/?api_key={API_KEY}&active_session=true]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List all Active Sessions [GET]

List all ACTIVE sessions


+ Response 200 (application/json)

        [{
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": null,
            "viewer_link": "https://surfly.com/123-123-123",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://example.com",
            "meta": "{}",
            "tags": [],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }]


# Sessions Collection by tags [/sessions/?api_key={API_KEY}&tags=tag1,tag2]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List all Sessions by given tags [GET]

List all sessions with a certain tags


+ Response 200 (application/json)

        [{
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": null,
            "viewer_link": "https://surfly.com/123-123-123",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://example.com",
            "meta": "{}",
            "tags": ["tag1", "tag2", "tag3"],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }]



# Agent Sessions Collection [/sessions/?api_key={API_KEY}&active_session=true&agent_id=1&year=2017&month=04]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List Active Sessions for Agent [GET]

List all ACTIVE sessions for a certain `AGENT`, `year`, `month`

`active_session`, `agent_id`, `year` and `month` are optional


+ Response 200 (application/json)

        [{
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": 1,
            "viewer_link": "https://surfly.com/123-123-123",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://example.com",
            "meta": "{}",
            "tags": [],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }]



# Session Information [/sessions/{ID}/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)
    + ID (string, `fuSHr0sRQ1usugvheahwQ`)


### Get session information [GET]

Get information about a session by `ID`. `ID` can be a formatted ID (e.g. 123-123-123), or an unformatted ID (e.g. fuSHr0sRQ1usugvheahwQ)

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| session_id | unique ID of the session | fOBg4dXAPTHSoil6LywgfYA |
| formatted_id | unique formatted ID of the session | 123-456-789 |
| agent_id | ID of the agent | 2 |
| viewer_link | the link that must be opened in a ***viewer*** browser | https://surfly.com/123-456-789 |
| start_time | time the session started | 2016-06-17T14:30:44.026111Z |
| duration | length of the session (in seconds) | 123 |
| end_time | time the session finished | 2016-06-17T15:30:44.026111Z |
| pin | 4-digit PIN code that can be used to join the session | 3927 |
| queued | Whether the session has been put in a waiting queue | false |
| start_url | page the session started from | https://example.com/ |
| meta | additional data attached to joining user | {} |
| tags | array of attached session tags | ["tag1", "tag2"] |
| ip_leader | IP address of the leader | "123.123.123.123" |
| ip_follower | comma seperated list of IP's of followers | "10.0.0.1,10.0.0.2" |
| emails_send | list of email invitations sent | [{"to": [], "from": null}] |
| options | options the session was created with | {"ui_off": false, "block_until_agent_joins": true} |

+ Response 200 (application/json)

        {
            "id": "fvFkrL4saf52nuFh4GP9oQw",
            "session_id": "fvFkrL4saf52nuFh4GP9oQw",
            "formatted_id": "123-123-123",
            "agent_id": 1,
            "viewer_link": "https://surfly.com/123-123-123",
            "start_time": "2017-04-21T13:55:08.251918Z",
            "duration": null,
            "end_time": null,
            "queue_id": 0,
            "pin": null,
            "queued": false,
            "start_url": "https://example.com",
            "meta": "{}",
            "tags": [],
            "ip_leader": "192.168.33.1",
            "ip_follower": "",
            "emails_send": [{
                "to": [],
                "from": null
            }],
            "options": {
                "enable_sounds": 1,
                "videochat": 1,
                "whitelist": "[]",
                "agent_can_end_session": 1,
                "auto_restore": 1,
                "set_to_smallest": 1,
                "cookie_transfer_enabled": 1,
                "cookie_transfer_scopes": [],
                "QUEUE_CALLBACK": 0,
                "min_width": 0,
                "agent_can_request_control": 0,
                "widget_key": 0,
                "on_end_redirect_follower_to_queue": 0,
                "cookie_transfer_proxying": 0,
                "store_chat_logs": 0,
                "allow_control_switching": 1,
                "dock_position": "left",
                "start_muted": 0,
                "QUEUE_HANDLER": 0,
                "format_session_id": 1,
                "disable_end_redirect": 0,
                "agent_can_take_control": 0,
                "cookie_transfer_urls": [],
                "splash": 1,
                "theme_font_size": 0,
                "drawing_mode": "temporary",
                "drawing_width": "15",
                "QUEUE_METADATA_CALLBACK": 0,
                "theme_font_color": 0,
                "verbose_console": 0,
                "replace_window": 0,
                "newurl": 1,
                "QUEUE_ENDPOINT": 0,
                "end_of_session_popup_url": 0,
                "start_docked": 0,
                "chat_box_color": "#eb777f",
                "autohide_button": 0,
                "max_height": 0,
                "white_label": 0,
                "blacklist": "[]",
                "drawing_timeout": "3",
                "position": 0,
                "filesharing": 1,
                "hide_until_agent_joins": 0,
                "hidden": 0,
                "min_height": 0,
                "allow_original_file_download": 0,
                "docked_only": 0,
                "ui_off": 0,
                "drawing_color": "default",
                "max_width": 0,
                "sharing_button": 1,
                "auto_start": 0,
                "theme_font_background": 0,
                "block_until_agent_joins": 0,
                "follower_redirect_url": "",
                "only_embedded_sessions": 0,
                "stealth_mode": 1,
                "leader_redirect_url": ""
            }
        }



########################################
# Group Queue

Manage and maintain the QUEUE for a certain client


# Queue Collection [/queue/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### List all Active Sessions in the Queue [GET]

List all items in the support Queue

**Response body**

A list of objects containing the following parameters:

| Name | Description | Example |
| ---------------| ------------| --------|
| start_time | time the session started | 2016-08-11T13:44:58.025358Z |
| url | |  |
| start_url | starting page of the session | http://www.surfly.com/ |
| pin | 4-digit PIN code that can be used to join the session | null |
| identifier | | null |

+ Response 200 (application/json)

        [
            {
                "start_time": "2016-08-11T13:44:58.025358Z",
                "url":"",
                "start_url": "http://www.surfly.com/",
                "pin": null,
                "identifier": null
            }
        ]


### Add an item to the Queue [POST]

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| id | session ID or formatted session ID | fEapBPiwxSouiLcAgb2OXQ or 123-456-789 |


**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| start_time | time the session started | 2016-08-11T13:44:58.025358Z |
| url | |  |
| start_url | starting page of the session | http://www.surfly.com/ |
| pin | 4-digit PIN code that can be used to join the session | 1234 |
| identifier | | 1234 |


+ Request (application/json)

        {
            "url": "http://www.example.com/",
            "id": "fEapBPiwxSouiLcAgb2OXQ"
        }

+ Response 200 (application/json)

        {
            "start_time": "2016-08-11T13:44:58.025358Z",
            "url": "",
            "start_url": "http://www.surfly.com/",
            "pin": 1234,
            "identifier": 1234
        }


### Get current queue status [GET /queue/status/?api_key={API_KEY}&tag={SESSION_TAG}]

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
 agent_available | Returns true if there is an online available agent | false |
| queued_sessions | A number of the sessions in the queue. If session tag is specified, only sessions with that tag will be counted | 24 |

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`, required)
    + SESSION_TAG (string, `tag1`, optional) - If specified, only sessions with this tag will be counted


+ Response 200 (application/json)

        {
            "agent_available": true,
            "queued_sessions": 3
        }


########################################
# Group Clients

# Clients Collection [/clients/{RESELLER_KEY}/?api_key={API_KEY}]

+ Parameters
    + RESELLER_KEY (string, `02fbfd63b54341c1828e6a2426311788`)
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### Lists all your clients [GET]

Return all your clients by `RESELLER_KEY`

**Response Body:**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| company_name | name of company | Neverland |
| client_key | client key | AOEUaoeuntsPDe |
| agent_count | maximum number of agents | 15 |
| widget_key | widget key | 24d1414c71a94cbf9f205ed4fc4999b5 |
| rest_key | REST API key | 3b57bd2db21c46d2875508b982968d26 |
| domains | comma-separated list of domains | example.com, *.example.com |

+ Response 200 (application/json)


        [{
            "company_name": "Neverland",
            "client_key": "AOEUaoeuntsPDe",
            "agent_count": 15,
            "widget_key": "24d1414c71a94cbf9f205ed4fc4999b5",
            "rest_key": "3b57bd2db21c46d2875508b982968d26",
            "domains": "example.com, *.example.com"
        },
        {
            "company_name": "DefaultCompany",
            "client_key": "b05b45b8d4df42ba96",
            "agent_count": 2,
            "widget_key": "c6a1333308a843cc9fb6aee2e42941d6",
            "rest_key": "767dd31a038c4ee798c72abb4b568ade",
            "domains": "*"
        }]


### Create a new client [POST]

Add a new client as `RESELLER_KEY`

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| company_name | name of new company | Neverland |
| domains (optional) | comma-separated list of domains | * |
| agent_email (optional) | email of a company admin | peter@mail.com |
| agent_name (optional) | name of a company admin | Peter Pan |

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| company_name | name of company | Neverland |
| client_key | client key | fOBg4dXAPTHSoil6LywgfYA |
| rest_key | REST API key | 22c0f77e5ca54d8fa6748f7cec4732c5 |
| widget_key | widget key | 92cdd920f4e345768f6717b02f15dae8 |


+ Request (application/json)

        {
            "company_name": "Neverland",
            "domains": "*",
            "agent_email": "peter@mail.com",
            "agent_name": "Peter Pan"
        }

+ Response 200 (application/json)

        {
            "company_name": "Neverland",
            "client_key": "fOBg4dXAPTHSoil6LywgfYA",
            "rest_key":"22c0f77e5ca54d8fa6748f7cec4732c5",
            "widget_key":"92cdd920f4e345768f6717b02f15dae8"
        }

# Client Information [/clients/{RESELLER_KEY}/{CLIENT_ID}/?api_key={API_KEY}]

+ Parameters
    + RESELLER_KEY (string, `02fbfd63b54341c1828e6a2426311788`)
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)
    + CLIENT_ID (string, `63668234b4aa19dd436e6a76ab8ae000`)

### Get Client Information [GET]

Get information about a specific client by `CLIENT_ID`

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| company_name | name of company | Neverland |
| client_key | client key | AOEUaoeuntsPDe |
| agent_count | maximum number of agents | 15 |
| widget_key | widget key | 24d1414c71a94cbf9f205ed4fc4999b5 |
| rest_key | REST API key | 3b57bd2db21c46d2875508b982968d26 |
| domains | comma-separated list of domains | example.com, *.example.com |


+ Response 200 (application/json)

        {
            "company_name": "Neverland",
            "client_key": "AOEUaoeuntsPDe",
            "agent_count": 15,
            "widget_key": "24d1414c71a94cbf9f205ed4fc4999b5",
            "rest_key": "3b57bd2db21c46d2875508b982968d26",
            "domains": "example.com, *.example.com"
        }

### Set Client Domain List [POST]

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| domains | comma-separated list of domains | example.com, *.example.com |

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| domains | comma-separated list of domains | example.com, *.example.com |

+ Request (application/json)

        {
            "domains": "example.com, *.example.com"
        }

+ Response 200 (application/json)

        {
            "domains": "example.com, *.example.com"
        }

### Update a client [PUT]

Update a client as `RESELLER_KEY`

**Request Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| company_name | new name of company | Peter Pan |

**Response Body:**

|  Name | Description | Example |
| ---------------| ------------| --------|
| agent_count | maximum number of agents | 15 |
| company_name | name of company | Peter Pan |
| client_key | client key | AOEUaoeuntsPDe |



+ Request (application/json)

        {
            "company_name": "Peter Pan"
        }

+ Response 200 (application/json)

        {
            "agent_count":15,
            "company_name": "Peter Pan",
            "client_key":"AOEUaoeuntsPDe"
        }

### Delete a Client [DELETE]

+ Response 200 (application/json)

        {
            "response":"Client has been removed Successfully"
        }





# Reseller Sessions Collection [/sessions/?api_key={API_KEY}&clientkey={CLIENT_KEY}&active_session=true&year=2015&month=01]

+ Parameters
    + CLIENT_KEY (string, `00063668234b4aa19dd436e6a76ab8ae`)
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)


### List Active Sessions for Reseller's Client [GET]

List all ACTIVE sessions for a certain `CLIENT`, `year`, `month`

`active_session`, `year` and `month` are optional

**Response Body:**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| session_id | unique ID of the session | fOBg4dXAPTHSoil6LywgfYA |
| agent_id |  ID of the agent | 2 |
| viewer_link | the link that must be opened in a ***viewer*** browser | https://session.surfly.com/fHrD6TMmRrurMevgidxyw |
| start_time | time the session started | 2016-08-11T13:44:58.025358Z |
| duration | length of the session (in seconds)| 123 |


+ Response 200 (application/json)

        [{
            "session_id": "fOBg4dXAPTHSoil6LywgfYA",
            "agent_id": 2,
            "viewer_link": "https://session.surfly.com/fwqcOuuMwTty7ii3kcA8Q",
            "start_time": "2016-08-11T13:44:58.025358Z",
            "duration": 123
        }]




########################################
# Group Invoice


# Invoice Collection [/get/invoice/details/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `3b57bd2db21c46d2875508b982968d26`)

### Lists your current month's invoice [GET]

**Response body**

|  Name | Description | Example |
| ---------------| ------------| --------|
| issue_date | the date the payment was issued | 2015-6-06 |
| to_address | the address of the recipient | ABC,1221,Netherlands,4343 |
| from_address | the address of the sender | Surfly Admin, Netherlands |
| payment_term | | 14 |
| sub_total | amount due | 1490 |
| currency | the currency type | euro |
| invoice_number | | 5 |
| total | total payment amount| 1490 |

+ Response 200 (application/json)

        [{
            "item_list": [{
                "amount": 40,
                "description": "Date from 2015-06-29 to 2015-01-29",
                "unit_price": 0.67,
                "quantity": 60
            }],
            "issue_date": "2015-6-06",
            "to_address": "ABC,1221,Netherlands,4343",
            "from_address": "Surfly Admin, Netherlands",
            "payment_term": 14,
            "sub_total": 1490,
            "currency": "euro",
            "invoice_number": 5,
            "total": 1490
        }]




########################################
# Group Logs

# Logs Collection [/logs/?api_key={API_KEY}]

+ Parameters
    + API_KEY (string, `jj34bd2db21c46d2875508b982968d26`)

### List all logs [GET]

Return a list of the logs

**Response body**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| id | the queue ID | 1 |
| agent_id | ID of the agent | 4 |
| created | time and date the log was created | 2016-05-30T15:13:03.253096Z |
| session_id | the session ID | flogr0sRQ1usugvheahwQ |
| details | the log details | New session with url http://surfly.com/ was started |

+ Response 200 (application/json)

        {
            "next": null,
            "previous": null,
            "results": [{
                "id": 1,
                "agent_id": 4,
                "created": "2016-05-30T15:13:03.253096Z",
                "session_id": "flogr0sRQ1usugvheahwQ",
                "details": "New session with url http://surfly.com/ was started"
            }]
        }

### Create log instance [POST]

Create a new log

**Request body**

|  Name | Description | Example |
| ---------------| ------------| --------|
| session_id | the session ID | flogr0sRQ1usugvheahwQ |
| details | the message you want to log | log message |

**Response body**

|  Name | Description | Example |
| ---------------| ------------| --------|
| id | the queue ID | 1 |
| agent_id | the ID of the agent | 4 |
| created | time and date | 2016-05-31T08:22:58.310337Z |
| session_id | the session ID | flogr0sRQ1usugvheahwQ |
| details | the message you want to log | Log message |


+ Request (application/json)

         {
            "session_id": "flogr0sRQ1usugvheahwQ",
            "details": "Log message"
        }

+ Response 200 (application/json)

        {
            "id": 1,
            "agent_id": 4,
            "created": "2016-05-31T08:22:58.310337Z",
            "session_id": "flogr0sRQ1usugvheahwQ",
            "details": "Log message"
        }


# Session Logs Collection [/logs/?api_key={API_KEY}&session_id={SESSION_ID}]

+ Parameters
    + API_KEY (string, `jj34bd2db21c46d2875508b982968d26`)
    + SESSION_ID (string, `flogr0sRQ1usugvheahwQ`)

### List all session logs [GET]

List all the logs from a session by `SESSION_ID`

**Response body**

A list of objects containing the following parameters:

|  Name | Description | Example |
| ---------------| ------------| --------|
| id | the queue ID | 1 |
| agent_id | the ID of the agent | 4 |
| created | the time and date at which the log was created | 2016-05-30T15:13:03.253096Z |
| session_id | the session ID | flogr0sRQ1usugvheahQ |
| details | the logged message | New session with url http://surfly.com/ was started |


+ Response 200 (application/json)

        {
            "next": null,
            "previous": null,
            "results": [{
                "id": 1,
                "agent_id": 4,
                "created": "2016-05-30T15:13:03.253096Z",
                "session_id": "flogr0sRQ1usugvheahwQ",
                "details": "New session with url http://surfly.com/ was started"
            }]
        }
